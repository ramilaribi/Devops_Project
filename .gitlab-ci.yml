stages:
  - check
  - build
  - test
  - report
  - sonar
  - deploy
  - stop_services
  - start_services
# Job to check Java and Maven versions
check-java-maven:
  stage: check
  image: maven:3.8.3-openjdk-17
  script:
    - echo "Checking Java version..."
    - java -version
    - echo "Checking Maven version..."
    - mvn --version

# Job to run Maven build
run-maven-build:
  stage: build
  image: maven:3.8.3-openjdk-17
  script:
    - echo "Running Maven build..."
    - mvn clean package  # Package the project (creates a JAR file in target)
  artifacts:
    paths:
      - target/  # Save the target directory as an artifact
    expire_in: 1 week  # Optional: Set expiration time for artifacts

# # Job to run Maven tests
# run-maven-tests:
#   stage: test
#   image: maven:3.8.3-openjdk-17
#   script:
#     - echo "Running Maven tests..."
#     - mvn clean test

# # Job to generate JaCoCo coverage report
# generate-jacoco-report:
#   stage: report
#   image: maven:3.8.3-openjdk-17
#   script:
#     - echo "Generating JaCoCo coverage report..."
#     - mvn jacoco:report
#   artifacts:
#     paths:
#       - target/site/jacoco

#  # Job for SonarQube analysis
# sonarqube-analysis:
#    stage: sonar
#    tags:
#      - sonar
#    script:
#      - echo "Starting SonarQube analysis..."
#      - curl -f http://192.168.33.10:9000 || (echo "SonarQube server is not reachable!" && exit 1)
#      - mvn clean compile
#      - mvn sonar:sonar -Dsonar.projectKey=Devpos_Sonar -Dsonar.host.url=http://192.168.33.10:9000 -Dsonar.login=$SONAR_TOKEN -Dsonar.java.binaries=target/classes -X -e || (echo "SonarQube analysis completed successfullyâœ…!" && exit 1)

# New Job to Create Docker Image Using Artifacts
push-to-dockerhub:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Logging into Docker Hub..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    - echo "Building Docker image for backend..."
    - docker build -t "$CI_REGISTRY_IMAGE:latest" -f Dockerfile.gitlab .
    - echo "Pushing Docker image to Docker Hub..."
    - docker push "$CI_REGISTRY_IMAGE:latest"
  dependencies:
    - run-maven-build  # Download artifacts from the build job
  only:
    - main
# Job to stop Docker Compose services cleanly
stop-docker-compose:
  stage: stop_services
  tags:
    - ec2-runner
  script:
    - echo "Stopping services with Docker Compose..."
    - docker-compose -f docker-compose.yml down
  only:
    - main

# Job to start Docker Compose services with data persistence
start-docker-compose:
  stage: start_services
  tags:
    - ec2-runner
  script:
    - echo "Starting services with Docker Compose..."
    - docker-compose -f docker-compose.yml up -d
  dependencies:
    - push-to-dockerhub
  only:
    - main