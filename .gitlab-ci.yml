stages:
  - check
  - build
  - test
  - report
  - sonar
  - deploy  # New stage for deploying with Docker

# Job to check Java and Maven versions
check-java-maven:
  stage: check
  image: maven:3.8.3-openjdk-17
  script:
    - echo "Checking Java version..."
    - java -version
    - echo "Checking Maven version..."
    - mvn --version

# Job to run Maven build
run-maven-build:
  stage: build
  image: maven:3.8.3-openjdk-17
  script:
    - echo "Running Maven build..."
    - mvn clean package  # Package the project (creates a JAR file in target)
  artifacts:
    paths:
      - target/  # Save the target directory as an artifact
    expire_in: 1 week  # Optional: Set expiration time for artifacts

# Job to run Maven tests
run-maven-tests:
  stage: test
  image: maven:3.8.3-openjdk-17
  script:
    - echo "Running Maven tests..."
    - mvn clean test

# Job to generate JaCoCo coverage report
generate-jacoco-report:
  stage: report
  image: maven:3.8.3-openjdk-17
  script:
    - echo "Generating JaCoCo coverage report..."
    - mvn jacoco:report
  artifacts:
    paths:
      - target/site/jacoco

# # Job for SonarQube analysis
# sonarqube-analysis:
#   stage: sonar
#   tags:
#     - sonar
#   script:
#     - echo "Starting SonarQube analysis..."
#     - curl -f http://192.168.33.10:9000 || (echo "SonarQube server is not reachable!" && exit 1)
#     - mvn clean compile
#     - mvn sonar:sonar -Dsonar.projectKey=Devpos_Sonar -Dsonar.host.url=http://192.168.33.10:9000 -Dsonar.login=$SONAR_TOKEN -Dsonar.java.binaries=target/classes -X -e || (echo "SonarQube analysis completed successfullyâœ…!" && exit 1)

# New Job to Create Docker Image Using Artifacts
build-backend-image:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Building Docker image for backend..."
    - docker build -t backendImage -f Dockerfile.gitlab .  # Using Dockerfile.gitlab as specified
    - docker save backendImage -o backendImage.tar  # Save the Docker image as a .tar file
  dependencies:
    - run-maven-build  # Download artifacts from the build job
  artifacts:
    paths:
      - backendImage.tar  # Save the Docker image as an artifact
    expire_in: 2 week
  only:
    - main
