services:
  backend:
   # image: ramilaribi/backendimage:latest
    image: ramilaribi/imagerami:latest
    container_name: voltix-backend
    ports:
      - "8086:8086"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/voltixxx?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/voltix_mongo_db
      JWT_SECRET: s3cr3tK3y1234567890
      SPRING_APPLICATION_NAME: Backend_Voltix
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - voltix-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: voltix-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: voltixxx
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql  # Add named volume for MySQL data
    networks:
      - voltix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 60s
      timeout: 15s
      retries: 5

  mongo:
    image: mongo:4.4
    container_name: voltix-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db  # Add named volume for MongoDB data
    networks:
      - voltix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 60s
      timeout: 15s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: voltix-phpmyadmin
    ports:
      - "8087:80"  # Expose phpMyAdmin on port 8087
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      db:
        condition: service_healthy
    networks:
      - voltix-network
    volumes:
      - ./apache.conf:/etc/apache2/conf-available/servername.conf  # Mount apache.conf
    command: /bin/bash -c "ln -s /etc/apache2/conf-available/servername.conf /etc/apache2/conf-enabled/servername.conf && apache2-foreground"
    restart: unless-stopped

networks:
  voltix-network:
    driver: bridge

volumes:
  mysql-data:  # Define named volume for MySQL data
  mongo-data:  # Define named volume for MongoDB data
