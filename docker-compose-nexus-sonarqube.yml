services:
  nexus:
    image: sonatype/nexus3
    container_name: nexus_auto
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data
      - ./nexus/credentials:/nexus-credentials:rw
    environment:
      - NEXUS_SECURITY_RANDOMPASSWORD=false
      - NEXUS_ADMIN_PASSWORD_FILE=/nexus-credentials/admin.password
    networks:
      - my_network

  sonarqube:
    image: sonarqube
    container_name: sonarqube_auto
    ports:
      - "9000:9000"
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-extensions:/opt/sonarqube/extensions
      - sonarqube-bundled-plugins:/opt/sonarqube/lib/bundled-plugins
      - ./sonarqube/credentials:/opt/sonarqube/credentials:rw
    environment:
      - SONAR_TOKEN_FILE=/opt/sonarqube/credentials/token.txt
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db-auto:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
      - SONAR_JAVA_OPTS=-Xmx512m -Xms128m
    restart: unless-stopped
    depends_on:
      - sonarqube-db
    networks:
      - my_network

  sonarqube-db:
    image: postgres:13
    container_name: sonarqube-db-auto
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - my_network

volumes:
  nexus-data:
  sonarqube-data:
  sonarqube-extensions:
  sonarqube-bundled-plugins:
  postgres-data:

networks:
  my_network:
    driver: bridge
